---
import { useSanityClient } from 'astro-sanity';
import { Image } from 'astro:assets';
import { getFirstBlogPost, urlForImage } from '../../lib/api.js';
import Main from '../../components/MainBlog.astro';
import Layout from '../../layouts/Layout.astro';
getStaticPaths;
export async function getStaticPaths() {
  const posts = await useSanityClient().fetch(`*[_type == "funtazia"]`);
  /*   console.log(posts); */
  return posts.map(
    ({
      slug,
      content,
      headline,
      image,
      imagesGallery,
      imagesTest,
      publishedAt,
      content2,
    }) => {
      return {
        params: { slug: slug.current },
        props: {
          content,
          headline,
          image,
          imagesGallery,
          imagesTest,
          publishedAt,
          content2,
        },
      };
    }
  );
}

const { slug } = Astro.params;
const {
  headline,
  content,
  image,
  imagesGallery,
  imagesTest,
  publishedAt,
  content2,
} = Astro.props;
---

<Layout>
  <Main>
    <!--  <div class="w-[500px] m-auto">
      <a data-fslightbox="gallery" href="https://i.imgur.com/fsyrScY.jpg">
        <img src="https://i.imgur.com/fsyrScY.jpg" alt="Image" />
      </a>
    </div> -->
    <img
      class="w-screen"
      src={image ? urlForImage(image).format('webp') : ''}
    />
    <section class="w-full relative">
      <div
        class="relative max-w-screen w-10/12 lg:w-6/12 left-1/2 transform -translate-x-1/2 mt-[-150px] lg:mt-[-450px] shadow-2xl"
      >
        <!-- top-[-100px] md:top-[-200px] lg:top-[-300px] xl:top-[-450px] -->
        <div class="bg-secondaryColor z-index-2 transition-all p-3">
          <h1 class="text-amber text-3xl p-4">{headline}</h1>
          <p class="p-2 m-4">Gábor - <span>{publishedAt}</span></p>
          <p class="p-2 m-3 text-xl font-judson">
            {content}
          </p>
        </div>
      </div>
      <div></div>
    </section>
    <section class="p-1 m-3 bg-backgroundColor">
      <h2 class="text-4xl p-5 text-secondaryColor text-center">Galéria</h2>
      <div id="gallery" class="flex p-5">
        {
          imagesGallery.map((kep) => (
            <>
              <div class="hover:scale-105 transition-all ">
                <a
                  href={urlForImage(kep).format('jpg')}
                  data-fslightbox="gallery"
                >
                  <img
                    class="h-[300px] w-auto m-6 hover:border-2 rounded-md hover:border-amber"
                    src={urlForImage(kep).format('jpg')}
                    alt="Image"
                  />
                </a>
              </div>
            </>
          ))
        }
      </div>
      <div id="gallery" class="flex p-5">
        {
          imagesTest.map((obj) => (
            <>
              <div class="hover:scale-105 rounded-md transition-all  m-3 bg-secondaryColor hover:border-amber hover:border-2 ">
                <a
                  href={urlForImage(obj.image).format('jpg')}
                  data-fslightbox="gallery"
                  class=""
                >
                  <img
                    class="h-[300px] w-auto rounded-md "
                    src={urlForImage(obj.image).format('jpg')}
                    alt="Image"
                  />
                </a>
                <p class="italic text-center text-amber">{obj.alt}</p>
              </div>
            </>
          ))
        }
      </div>
    </section>
    <!--   <div class="bg-black flex justify-center">
      {
        imagesTest.map((obj) => (
          <>
            {console.log(obj)}
            <p>{obj.alt}</p>
            <img
              src={urlForImage(obj.image).format('jpg')}
              class="w-[200px] h-auto"
            />
          </>
        ))
      }
    </div> -->
    <div class="bg-secondaryColor justify-center">
      {
        content2.map((obj) => (
          <>
            <div class="text-center">
              <h2 class="text-amber p-5 text-3xl">{obj.subhead}</h2>
              <p class="text-accentColor p-3 text-2xl">{obj.content}</p>
              {obj.imagesTest.map((kep) => (
                <>
                  {console.log(kep)}
                  <div class="flex bg-primaryColor border-4 border-primaryColor">
                    <p>{kep.alt}</p>
                    <div class="">
                      <a
                        href={urlForImage(kep.image).format('jpg')}
                        data-fslightbox="gallery"
                      >
                        <img
                          class="h-[300px] w-auto p-5"
                          src={urlForImage(kep.image).format('jpg')}
                          alt="Image"
                        />
                      </a>
                    </div>
                  </div>
                </>
              ))}
            </div>
          </>
        ))
      }
    </div>
  </Main>
</Layout>

<script>
  import fslightbox from 'fslightbox';
  fsLightbox.props.type = 'image';
</script>
